{
    "machine_info": {
        "node": "mrjulian-hpelitedragonfly",
        "processor": "",
        "machine": "x86_64",
        "python_compiler": "GCC 13.2.1 20230801",
        "python_implementation": "CPython",
        "python_implementation_version": "3.11.7",
        "python_version": "3.11.7",
        "python_build": [
            "main",
            "Jan 29 2024 16:03:57"
        ],
        "release": "6.6.16-2-MANJARO",
        "system": "Linux",
        "cpu": {
            "python_version": "3.11.7.final.0 (64 bit)",
            "cpuinfo_version": [
                9,
                0,
                0
            ],
            "cpuinfo_version_string": "9.0.0",
            "arch": "X86_64",
            "bits": 64,
            "count": 8,
            "arch_string_raw": "x86_64",
            "vendor_id_raw": "GenuineIntel",
            "brand_raw": "Intel(R) Core(TM) i7-8665U CPU @ 1.90GHz",
            "hz_advertised_friendly": "1.9000 GHz",
            "hz_actual_friendly": "2.7006 GHz",
            "hz_advertised": [
                1900000000,
                0
            ],
            "hz_actual": [
                2700598000,
                0
            ],
            "stepping": 12,
            "model": 142,
            "family": 6,
            "flags": [
                "3dnowprefetch",
                "abm",
                "acpi",
                "adx",
                "aes",
                "aperfmperf",
                "apic",
                "arat",
                "arch_capabilities",
                "arch_perfmon",
                "art",
                "avx",
                "avx2",
                "bmi1",
                "bmi2",
                "bts",
                "clflush",
                "clflushopt",
                "cmov",
                "constant_tsc",
                "cpuid",
                "cpuid_fault",
                "cx16",
                "cx8",
                "de",
                "ds_cpl",
                "dtes64",
                "dtherm",
                "dts",
                "epb",
                "ept",
                "ept_ad",
                "erms",
                "est",
                "f16c",
                "flexpriority",
                "flush_l1d",
                "fma",
                "fpu",
                "fsgsbase",
                "fxsr",
                "hle",
                "ht",
                "hwp",
                "hwp_act_window",
                "hwp_epp",
                "hwp_notify",
                "ibpb",
                "ibrs",
                "ibrs_enhanced",
                "ida",
                "intel_pt",
                "invpcid",
                "lahf_lm",
                "lm",
                "mca",
                "mce",
                "md_clear",
                "mmx",
                "monitor",
                "movbe",
                "mpx",
                "msr",
                "mtrr",
                "nonstop_tsc",
                "nopl",
                "nx",
                "osxsave",
                "pae",
                "pat",
                "pbe",
                "pcid",
                "pclmulqdq",
                "pdcm",
                "pdpe1gb",
                "pebs",
                "pge",
                "pln",
                "pni",
                "popcnt",
                "pse",
                "pse36",
                "pts",
                "rdrand",
                "rdrnd",
                "rdseed",
                "rdtscp",
                "rep_good",
                "rtm",
                "sdbg",
                "sep",
                "sgx",
                "smap",
                "smep",
                "smx",
                "ss",
                "ssbd",
                "sse",
                "sse2",
                "sse4_1",
                "sse4_2",
                "ssse3",
                "stibp",
                "syscall",
                "tm",
                "tm2",
                "tpr_shadow",
                "tsc",
                "tsc_adjust",
                "tsc_deadline_timer",
                "tscdeadline",
                "vme",
                "vmx",
                "vnmi",
                "vpid",
                "x2apic",
                "xgetbv1",
                "xsave",
                "xsavec",
                "xsaveopt",
                "xsaves",
                "xtopology",
                "xtpr"
            ],
            "l3_cache_size": 8388608,
            "l2_cache_size": 1048576,
            "l1_data_cache_size": 131072,
            "l1_instruction_cache_size": 131072,
            "l2_cache_line_size": 256,
            "l2_cache_associativity": 6
        }
    },
    "commit_info": {
        "id": "a882d2bc97915fdd96af6fcd0386efe9d6b0fe4d",
        "time": "2024-02-25T14:56:24-03:00",
        "author_time": "2024-02-25T14:56:24-03:00",
        "dirty": false,
        "project": "JASM-private",
        "branch": "feature/finish-test-benchmark-settings"
    },
    "benchmarks": [
        {
            "group": null,
            "name": "test_all_patterns[9_calls]",
            "fullname": "tests/test_matching.py::test_all_patterns[9_calls]",
            "params": {
                "config": {
                    "title": "9_calls",
                    "yaml": "tests/yamls/9_calls.yaml",
                    "assembly": "tests/assembly/binary_data.s",
                    "expected": true
                }
            },
            "param": "9_calls",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.0005785680004919413,
                "max": 0.009610359000362223,
                "mean": 0.0007055598138401903,
                "stddev": 0.0005646989746013357,
                "rounds": 274,
                "median": 0.0006280335001065396,
                "iqr": 5.404599869507365e-05,
                "q1": 0.0006205050012795255,
                "q3": 0.0006745509999745991,
                "iqr_outliers": 15,
                "stddev_outliers": 8,
                "outliers": "8;15",
                "ld15iqr": 0.0005785680004919413,
                "hd15iqr": 0.0007688160003453959,
                "ops": 1417.3142806380135,
                "total": 0.19332338899221213,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[10_calls]",
            "fullname": "tests/test_matching.py::test_all_patterns[10_calls]",
            "params": {
                "config": {
                    "title": "10_calls",
                    "yaml": "tests/yamls/10_calls.yaml",
                    "assembly": "tests/assembly/binary_data.s",
                    "expected": false
                }
            },
            "param": "10_calls",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.0005596470000455156,
                "max": 0.0013871680002921494,
                "mean": 0.0006480888494557822,
                "stddev": 0.00010181717198102795,
                "rounds": 930,
                "median": 0.0006164605001686141,
                "iqr": 5.755400161433499e-05,
                "q1": 0.0006016219995217398,
                "q3": 0.0006591760011360748,
                "iqr_outliers": 62,
                "stddev_outliers": 59,
                "outliers": "59;62",
                "ld15iqr": 0.0005596470000455156,
                "hd15iqr": 0.0007456259991158731,
                "ops": 1542.9983108638994,
                "total": 0.6027226299938775,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[exclude_list]",
            "fullname": "tests/test_matching.py::test_all_patterns[exclude_list]",
            "params": {
                "config": {
                    "title": "exclude_list",
                    "yaml": "tests/yamls/exclude_list.yaml",
                    "assembly": "tests/assembly/binary_data.s",
                    "expected": true
                }
            },
            "param": "exclude_list",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.0006176590013637906,
                "max": 0.0030133889995340724,
                "mean": 0.0008105770307828117,
                "stddev": 0.0003255951754263,
                "rounds": 65,
                "median": 0.0007149409993871814,
                "iqr": 0.0001259467503587075,
                "q1": 0.0006742634991496743,
                "q3": 0.0008002102495083818,
                "iqr_outliers": 7,
                "stddev_outliers": 5,
                "outliers": "5;7",
                "ld15iqr": 0.0006176590013637906,
                "hd15iqr": 0.001033876998917549,
                "ops": 1233.6890412922924,
                "total": 0.05268750700088276,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[not_call]",
            "fullname": "tests/test_matching.py::test_all_patterns[not_call]",
            "params": {
                "config": {
                    "title": "not_call",
                    "yaml": "tests/yamls/not_call.yaml",
                    "assembly": "tests/assembly/binary_data.s",
                    "expected": true
                }
            },
            "param": "not_call",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.0005915419988014037,
                "max": 0.0013238720002846094,
                "mean": 0.0006763521946656614,
                "stddev": 7.298152543047921e-05,
                "rounds": 596,
                "median": 0.0006535920001624618,
                "iqr": 5.654249980580062e-05,
                "q1": 0.0006385870001395233,
                "q3": 0.0006951294999453239,
                "iqr_outliers": 33,
                "stddev_outliers": 48,
                "outliers": "48;33",
                "ld15iqr": 0.0005915419988014037,
                "hd15iqr": 0.0007799560007697437,
                "ops": 1478.5196350169695,
                "total": 0.4031059080207342,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[include_and_include_list]",
            "fullname": "tests/test_matching.py::test_all_patterns[include_and_include_list]",
            "params": {
                "config": {
                    "title": "include_and_include_list",
                    "yaml": "tests/yamls/include_and_include_list.yaml",
                    "assembly": "tests/assembly/binary_data.s",
                    "expected": true
                }
            },
            "param": "include_and_include_list",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.0017160469997179462,
                "max": 0.0033301729999948293,
                "mean": 0.0019191696467572943,
                "stddev": 0.00026197659221641087,
                "rounds": 218,
                "median": 0.0018421644999762066,
                "iqr": 0.00011525600166351069,
                "q1": 0.00179955599924142,
                "q3": 0.0019148120009049308,
                "iqr_outliers": 19,
                "stddev_outliers": 15,
                "outliers": "15;19",
                "ld15iqr": 0.0017160469997179462,
                "hd15iqr": 0.002100584000800154,
                "ops": 521.0586785225787,
                "total": 0.4183789829930902,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[include_and_include_list_with_macros]",
            "fullname": "tests/test_matching.py::test_all_patterns[include_and_include_list_with_macros]",
            "params": {
                "config": {
                    "title": "include_and_include_list_with_macros",
                    "yaml": "tests/yamls/include_and_include_list_with_macros.yaml",
                    "assembly": "tests/assembly/binary_data.s",
                    "expected": true
                }
            },
            "param": "include_and_include_list_with_macros",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.0017687800009298371,
                "max": 0.005386320000980049,
                "mean": 0.002099123458988002,
                "stddev": 0.0004766002965014776,
                "rounds": 207,
                "median": 0.001965225999811082,
                "iqr": 0.00014494450169877382,
                "q1": 0.0019175124989487813,
                "q3": 0.002062457000647555,
                "iqr_outliers": 19,
                "stddev_outliers": 13,
                "outliers": "13;19",
                "ld15iqr": 0.0017687800009298371,
                "hd15iqr": 0.002286994000314735,
                "ops": 476.38932132277006,
                "total": 0.4345185560105165,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[include_and_include_list_with_macros_with_args]",
            "fullname": "tests/test_matching.py::test_all_patterns[include_and_include_list_with_macros_with_args]",
            "params": {
                "config": {
                    "title": "include_and_include_list_with_macros_with_args",
                    "yaml": "tests/yamls/include_and_include_list_with_macros_with_args_mock_hint.yaml",
                    "assembly": "tests/assembly/binary_data.s",
                    "expected": true
                }
            },
            "param": "include_and_include_list_with_macros_with_args",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.002031924001130392,
                "max": 0.0060156489998917095,
                "mean": 0.002367617587556273,
                "stddev": 0.0004634369271767808,
                "rounds": 417,
                "median": 0.0022595209993596654,
                "iqr": 0.00010812400023496593,
                "q1": 0.002225014000032388,
                "q3": 0.002333138000267354,
                "iqr_outliers": 36,
                "stddev_outliers": 17,
                "outliers": "17;36",
                "ld15iqr": 0.0020783190011570696,
                "hd15iqr": 0.0025030600008904003,
                "ops": 422.3655058383588,
                "total": 0.9872965340109658,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[call_between_3_and_9]",
            "fullname": "tests/test_matching.py::test_all_patterns[call_between_3_and_9]",
            "params": {
                "config": {
                    "title": "call_between_3_and_9",
                    "yaml": "tests/yamls/call_between_3_and_9.yaml",
                    "assembly": "tests/assembly/binary_data.s",
                    "expected": true
                }
            },
            "param": "call_between_3_and_9",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.0020856779992755037,
                "max": 0.005996371999572148,
                "mean": 0.0023179206584497685,
                "stddev": 0.000434537973245476,
                "rounds": 202,
                "median": 0.0022160984999572975,
                "iqr": 0.00011007899956894107,
                "q1": 0.0021808950004924554,
                "q3": 0.0022909740000613965,
                "iqr_outliers": 18,
                "stddev_outliers": 9,
                "outliers": "9;18",
                "ld15iqr": 0.0020856779992755037,
                "hd15iqr": 0.0024748640007601352,
                "ops": 431.4211516923977,
                "total": 0.46821997300685325,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[moonbounce_malware_truncated_11518_lines]",
            "fullname": "tests/test_matching.py::test_all_patterns[moonbounce_malware_truncated_11518_lines]",
            "params": {
                "config": {
                    "title": "moonbounce_malware_truncated_11518_lines",
                    "yaml": "tests/yamls/moonbounce_regex_matcher.yaml",
                    "assembly": "tests/assembly/moonbounce_malware_truncated_11518_lines.s",
                    "expected": true
                }
            },
            "param": "moonbounce_malware_truncated_11518_lines",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.06293473200094013,
                "max": 0.11817837099988537,
                "mean": 0.0732231489996943,
                "stddev": 0.014476351355596757,
                "rounds": 13,
                "median": 0.069914648998747,
                "iqr": 0.008208912250211142,
                "q1": 0.06577158799973404,
                "q3": 0.07398050024994518,
                "iqr_outliers": 1,
                "stddev_outliers": 1,
                "outliers": "1;1",
                "ld15iqr": 0.06293473200094013,
                "hd15iqr": 0.11817837099988537,
                "ops": 13.65688328979371,
                "total": 0.9519009369960258,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[moonbounce_malware_full_111826_lines_binarly.s]",
            "fullname": "tests/test_matching.py::test_all_patterns[moonbounce_malware_full_111826_lines_binarly.s]",
            "params": {
                "config": {
                    "title": "moonbounce_malware_full_111826_lines_binarly.s",
                    "yaml": "tests/yamls/moonbounce_from_binarly.yaml",
                    "assembly": "tests/assembly/moonbounce_malware_full_111826_lines.s",
                    "expected": true
                }
            },
            "param": "moonbounce_malware_full_111826_lines_binarly.s",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 1.0385765010014438,
                "max": 1.2818287440004497,
                "mean": 1.1449659464004072,
                "stddev": 0.11606066208727162,
                "rounds": 5,
                "median": 1.0911442960004933,
                "iqr": 0.2132710274981946,
                "q1": 1.0508952135010077,
                "q3": 1.2641662409992023,
                "iqr_outliers": 0,
                "stddev_outliers": 1,
                "outliers": "1;0",
                "ld15iqr": 1.0385765010014438,
                "hd15iqr": 1.2818287440004497,
                "ops": 0.8733884209777966,
                "total": 5.724829732002036,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[1_call]",
            "fullname": "tests/test_matching.py::test_all_patterns[1_call]",
            "params": {
                "config": {
                    "title": "1_call",
                    "yaml": "tests/yamls/1_call.yaml",
                    "assembly": "tests/assembly/binary_data.s",
                    "expected": true
                }
            },
            "param": "1_call",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.0006350799994834233,
                "max": 0.0014180190009938087,
                "mean": 0.0006857745853112087,
                "stddev": 8.379148361038416e-05,
                "rounds": 844,
                "median": 0.0006659564996880363,
                "iqr": 2.5078501494135708e-05,
                "q1": 0.0006542394994539791,
                "q3": 0.0006793180009481148,
                "iqr_outliers": 73,
                "stddev_outliers": 52,
                "outliers": "52;73",
                "ld15iqr": 0.0006350799994834233,
                "hd15iqr": 0.0007186610000644578,
                "ops": 1458.205103279227,
                "total": 0.5787937500026601,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[@any macro]",
            "fullname": "tests/test_matching.py::test_all_patterns[@any macro]",
            "params": {
                "config": {
                    "title": "@any macro",
                    "yaml": "tests/yamls/any_macro.yaml",
                    "assembly": "tests/assembly/binary_data.s",
                    "expected": true
                }
            },
            "param": "@any macro",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.0008385979999729898,
                "max": 0.0024436520016024588,
                "mean": 0.0009192739156968845,
                "stddev": 0.00011763144441061744,
                "rounds": 593,
                "median": 0.0008839380006975261,
                "iqr": 3.641099965534522e-05,
                "q1": 0.0008717177506696316,
                "q3": 0.0009081287503249769,
                "iqr_outliers": 86,
                "stddev_outliers": 46,
                "outliers": "46;86",
                "ld15iqr": 0.0008385979999729898,
                "hd15iqr": 0.0009637760012992658,
                "ops": 1087.8150493826627,
                "total": 0.5451294320082525,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[moonbounce_malware_short_6_lines]",
            "fullname": "tests/test_matching.py::test_all_patterns[moonbounce_malware_short_6_lines]",
            "params": {
                "config": {
                    "title": "moonbounce_malware_short_6_lines",
                    "yaml": "tests/yamls/moonbounce_regex_matcher.yaml",
                    "assembly": "tests/assembly/moonbounce_malware_short_6_lines.s",
                    "expected": true
                }
            },
            "param": "moonbounce_malware_short_6_lines",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.0016236219998972956,
                "max": 0.0028764609996869694,
                "mean": 0.0017780126762771099,
                "stddev": 0.00014673122148083567,
                "rounds": 519,
                "median": 0.0017164090004371246,
                "iqr": 0.0001528832494841481,
                "q1": 0.0016900927498681995,
                "q3": 0.0018429759993523476,
                "iqr_outliers": 19,
                "stddev_outliers": 46,
                "outliers": "46;19",
                "ld15iqr": 0.0016236219998972956,
                "hd15iqr": 0.0020804119994863868,
                "ops": 562.4256864657731,
                "total": 0.9227885789878201,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[smc_assembly]",
            "fullname": "tests/test_matching.py::test_all_patterns[smc_assembly]",
            "params": {
                "config": {
                    "title": "smc_assembly",
                    "yaml": "tests/yamls/smc.yaml",
                    "assembly": "tests/assembly/smc.s",
                    "expected": true
                }
            },
            "param": "smc_assembly",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.0029433749987219926,
                "max": 0.005583309999565245,
                "mean": 0.003140744752010505,
                "stddev": 0.000336307636643638,
                "rounds": 250,
                "median": 0.003063716999349708,
                "iqr": 7.038699914119206e-05,
                "q1": 0.003045110001039575,
                "q3": 0.003115497000180767,
                "iqr_outliers": 21,
                "stddev_outliers": 12,
                "outliers": "12;21",
                "ld15iqr": 0.0029433749987219926,
                "hd15iqr": 0.003221749000658747,
                "ops": 318.3958197685003,
                "total": 0.7851861880026263,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[smc_binary]",
            "fullname": "tests/test_matching.py::test_all_patterns[smc_binary]",
            "params": {
                "config": {
                    "title": "smc_binary",
                    "yaml": "tests/yamls/smc.yaml",
                    "binary": "tests/binary/smc.bin",
                    "expected": true
                }
            },
            "param": "smc_binary",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.008554444999390398,
                "max": 0.012441076998584322,
                "mean": 0.009079951305634663,
                "stddev": 0.0006294302636594395,
                "rounds": 108,
                "median": 0.008906292000574467,
                "iqr": 0.00035552199915400706,
                "q1": 0.008765238000705722,
                "q3": 0.009120759999859729,
                "iqr_outliers": 10,
                "stddev_outliers": 10,
                "outliers": "10;10",
                "ld15iqr": 0.008554444999390398,
                "hd15iqr": 0.009828050000578514,
                "ops": 110.13274921193013,
                "total": 0.9806347410085436,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[smc_binary_eko]",
            "fullname": "tests/test_matching.py::test_all_patterns[smc_binary_eko]",
            "params": {
                "config": {
                    "title": "smc_binary_eko",
                    "yaml": "tests/yamls/smc.yaml",
                    "binary": "tests/binary/smc_eko.bin",
                    "expected": true
                }
            },
            "param": "smc_binary_eko",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.00800591400002304,
                "max": 0.012031689000650658,
                "mean": 0.008575829474966667,
                "stddev": 0.0006933482415829933,
                "rounds": 120,
                "median": 0.008392673498747172,
                "iqr": 0.00030425899967667647,
                "q1": 0.008248717999777,
                "q3": 0.008552976999453676,
                "iqr_outliers": 13,
                "stddev_outliers": 10,
                "outliers": "10;13",
                "ld15iqr": 0.00800591400002304,
                "hd15iqr": 0.009049284999491647,
                "ops": 116.60679621942772,
                "total": 1.029099536996,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[oren_rule_example]",
            "fullname": "tests/test_matching.py::test_all_patterns[oren_rule_example]",
            "params": {
                "config": {
                    "title": "oren_rule_example",
                    "yaml": "tests/yamls/oren_rule_att.yaml",
                    "binary": "tests/binary/lenovo2.bin",
                    "expected": true
                }
            },
            "param": "oren_rule_example",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.10294871000041894,
                "max": 0.11844967100114445,
                "mean": 0.10841895866663738,
                "stddev": 0.0059014914659385,
                "rounds": 9,
                "median": 0.10580910099997709,
                "iqr": 0.009593642998879659,
                "q1": 0.10401346725029725,
                "q3": 0.11360711024917691,
                "iqr_outliers": 0,
                "stddev_outliers": 2,
                "outliers": "2;0",
                "ld15iqr": 0.10294871000041894,
                "hd15iqr": 0.11844967100114445,
                "ops": 9.223479106405764,
                "total": 0.9757706279997365,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[oren_rule_example_addr_valid]",
            "fullname": "tests/test_matching.py::test_all_patterns[oren_rule_example_addr_valid]",
            "params": {
                "config": {
                    "title": "oren_rule_example_addr_valid",
                    "yaml": "tests/yamls/oren_rule_att_addr_valid.yaml",
                    "binary": "tests/binary/lenovo2.bin",
                    "expected": true
                }
            },
            "param": "oren_rule_example_addr_valid",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.11438083299981372,
                "max": 0.13515534799989837,
                "mean": 0.12333766944417827,
                "stddev": 0.007750217754977255,
                "rounds": 9,
                "median": 0.121965000000273,
                "iqr": 0.014485332750155067,
                "q1": 0.11604110849930294,
                "q3": 0.130526441249458,
                "iqr_outliers": 0,
                "stddev_outliers": 4,
                "outliers": "4;0",
                "ld15iqr": 0.11438083299981372,
                "hd15iqr": 0.13515534799989837,
                "ops": 8.107823056058253,
                "total": 1.1100390249976044,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[oren_rule_example_addr_valid_assembly]",
            "fullname": "tests/test_matching.py::test_all_patterns[oren_rule_example_addr_valid_assembly]",
            "params": {
                "config": {
                    "title": "oren_rule_example_addr_valid_assembly",
                    "yaml": "tests/yamls/oren_rule_att_addr_valid.yaml",
                    "assembly": "tests/assembly/lenovo2_short.s",
                    "expected": true
                }
            },
            "param": "oren_rule_example_addr_valid_assembly",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.0023092249994078884,
                "max": 0.004089849000592949,
                "mean": 0.002440468188544958,
                "stddev": 0.00020500170942829398,
                "rounds": 398,
                "median": 0.0023930084989842726,
                "iqr": 8.458500087726861e-05,
                "q1": 0.002337935999094043,
                "q3": 0.0024225209999713115,
                "iqr_outliers": 40,
                "stddev_outliers": 27,
                "outliers": "27;40",
                "ld15iqr": 0.0023092249994078884,
                "hd15iqr": 0.0025494229994365014,
                "ops": 409.7574410901108,
                "total": 0.9713063390408934,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[lenovo_qequ_objdump]",
            "fullname": "tests/test_matching.py::test_all_patterns[lenovo_qequ_objdump]",
            "params": {
                "config": {
                    "title": "lenovo_qequ_objdump",
                    "yaml": "tests/yamls/oren_rule_att.yaml",
                    "assembly": "tests/assembly/objlenovo_qequ_objdump_2.34.s",
                    "expected": true
                }
            },
            "param": "lenovo_qequ_objdump",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.08068741500028409,
                "max": 0.09960480200061284,
                "mean": 0.08728542223084682,
                "stddev": 0.006604078153919438,
                "rounds": 13,
                "median": 0.08457849499973236,
                "iqr": 0.010356713249166205,
                "q1": 0.08255825200012623,
                "q3": 0.09291496524929244,
                "iqr_outliers": 0,
                "stddev_outliers": 3,
                "outliers": "3;0",
                "ld15iqr": 0.08068741500028409,
                "hd15iqr": 0.09960480200061284,
                "ops": 11.456666811501064,
                "total": 1.1347104890010087,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[capture_groups_test_rule on binary_data_for_capture_groups]",
            "fullname": "tests/test_matching.py::test_all_patterns[capture_groups_test_rule on binary_data_for_capture_groups]",
            "params": {
                "config": {
                    "title": "capture_groups_test_rule on binary_data_for_capture_groups",
                    "yaml": "tests/yamls/capture_groups_test_rule.yaml",
                    "assembly": "tests/assembly/binary_data_for_capture_groups.s",
                    "expected": true
                }
            },
            "param": "capture_groups_test_rule on binary_data_for_capture_groups",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.0014312319999589818,
                "max": 0.0033528919993841555,
                "mean": 0.0015407782939222364,
                "stddev": 0.0002302224060686528,
                "rounds": 262,
                "median": 0.0014788290000069537,
                "iqr": 7.352799912041519e-05,
                "q1": 0.0014492290010821307,
                "q3": 0.001522757000202546,
                "iqr_outliers": 29,
                "stddev_outliers": 17,
                "outliers": "17;29",
                "ld15iqr": 0.0014312319999589818,
                "hd15iqr": 0.0016630659993097652,
                "ops": 649.0226426115984,
                "total": 0.40368391300762596,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[1_call_plain_with_multiple_findings]",
            "fullname": "tests/test_matching.py::test_all_patterns[1_call_plain_with_multiple_findings]",
            "params": {
                "config": {
                    "title": "1_call_plain_with_multiple_findings",
                    "yaml": "tests/yamls/1_call_plain.yaml",
                    "assembly": "tests/assembly/binary_data.s",
                    "return_mode": "list",
                    "matching_mode": "all",
                    "return_only_address": true,
                    "expected": [
                        "4014",
                        "4021",
                        "4027",
                        "402d",
                        "4033",
                        "4039",
                        "403f",
                        "4045",
                        "404b",
                        "4051"
                    ]
                }
            },
            "param": "1_call_plain_with_multiple_findings",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.0005541690006793942,
                "max": 0.0015334359995904379,
                "mean": 0.000590655244358069,
                "stddev": 8.713255557648286e-05,
                "rounds": 1064,
                "median": 0.0005720494991692249,
                "iqr": 7.853998795326333e-06,
                "q1": 0.0005692705008186749,
                "q3": 0.0005771244996140013,
                "iqr_outliers": 140,
                "stddev_outliers": 37,
                "outliers": "37;140",
                "ld15iqr": 0.0005619829989882419,
                "hd15iqr": 0.0005889840012969216,
                "ops": 1693.0349972373676,
                "total": 0.6284571799969854,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[1_call_plain_with_single_finding]",
            "fullname": "tests/test_matching.py::test_all_patterns[1_call_plain_with_single_finding]",
            "params": {
                "config": {
                    "title": "1_call_plain_with_single_finding",
                    "yaml": "tests/yamls/1_call_plain.yaml",
                    "assembly": "tests/assembly/binary_data.s",
                    "return_mode": "list",
                    "matching_mode": "single",
                    "return_only_address": true,
                    "expected": [
                        "4014"
                    ]
                }
            },
            "param": "1_call_plain_with_single_finding",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.0005107370016048662,
                "max": 0.002165477999369614,
                "mean": 0.0005599526520082243,
                "stddev": 9.977111900084213e-05,
                "rounds": 1753,
                "median": 0.0005345489989849739,
                "iqr": 2.9642249501193874e-05,
                "q1": 0.0005220637503953185,
                "q3": 0.0005517059998965124,
                "iqr_outliers": 168,
                "stddev_outliers": 116,
                "outliers": "116;168",
                "ld15iqr": 0.0005107370016048662,
                "hd15iqr": 0.000597075999394292,
                "ops": 1785.8652805975325,
                "total": 0.9815969989704172,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[capture_group_two_push_with_same_reg]",
            "fullname": "tests/test_matching.py::test_all_patterns[capture_group_two_push_with_same_reg]",
            "params": {
                "config": {
                    "title": "capture_group_two_push_with_same_reg",
                    "yaml": "tests/yamls/capture_group_2_push_with_same_reg.yaml",
                    "assembly": "tests/assembly/binary_data_for_capture_groups.s",
                    "expected": true
                }
            },
            "param": "capture_group_two_push_with_same_reg",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.0006984709998505423,
                "max": 0.0021815219988639,
                "mean": 0.0008276905443186998,
                "stddev": 0.0002127592306288428,
                "rounds": 417,
                "median": 0.0007277759996213717,
                "iqr": 0.00011380549949535634,
                "q1": 0.0007095702494552825,
                "q3": 0.0008233757489506388,
                "iqr_outliers": 72,
                "stddev_outliers": 68,
                "outliers": "68;72",
                "ld15iqr": 0.0006984709998505423,
                "hd15iqr": 0.0009958819991879864,
                "ops": 1208.1810126550788,
                "total": 0.3451469569808978,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[capture_group_test_with_operands_working]",
            "fullname": "tests/test_matching.py::test_all_patterns[capture_group_test_with_operands_working]",
            "params": {
                "config": {
                    "title": "capture_group_test_with_operands_working",
                    "yaml": "tests/yamls/capture_groups_test_rule.yaml",
                    "assembly": "tests/assembly/binary_data_for_capture_groups.s",
                    "expected": true
                }
            },
            "param": "capture_group_test_with_operands_working",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.0014365880015247967,
                "max": 0.012030292999043013,
                "mean": 0.0015947756610452622,
                "stddev": 0.0004727853952399884,
                "rounds": 596,
                "median": 0.0015207559990813024,
                "iqr": 0.0001115455006583943,
                "q1": 0.001487051999902178,
                "q3": 0.0015985975005605724,
                "iqr_outliers": 35,
                "stddev_outliers": 22,
                "outliers": "22;35",
                "ld15iqr": 0.0014365880015247967,
                "hd15iqr": 0.0017734670000209007,
                "ops": 627.0474427384795,
                "total": 0.9504862939829763,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[oren_rule_with_capture_groups]",
            "fullname": "tests/test_matching.py::test_all_patterns[oren_rule_with_capture_groups]",
            "params": {
                "config": {
                    "title": "oren_rule_with_capture_groups",
                    "yaml": "tests/yamls/oren_rule_att_with_capture_groups.yaml",
                    "binary": "tests/binary/lenovo2.bin",
                    "expected": true
                }
            },
            "param": "oren_rule_with_capture_groups",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.10157574500044575,
                "max": 0.1231042500003241,
                "mean": 0.11147223589996429,
                "stddev": 0.0073801671335536004,
                "rounds": 10,
                "median": 0.11043351700027415,
                "iqr": 0.012125588000344578,
                "q1": 0.10624972999903548,
                "q3": 0.11837531799938006,
                "iqr_outliers": 0,
                "stddev_outliers": 4,
                "outliers": "4;0",
                "ld15iqr": 0.10157574500044575,
                "hd15iqr": 0.1231042500003241,
                "ops": 8.970843653817123,
                "total": 1.114722358999643,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[oren_rule_att_with_capture_groups_macro_subtree_expansion]",
            "fullname": "tests/test_matching.py::test_all_patterns[oren_rule_att_with_capture_groups_macro_subtree_expansion]",
            "params": {
                "config": {
                    "title": "oren_rule_att_with_capture_groups_macro_subtree_expansion",
                    "yaml": "tests/yamls/oren_rule_att_with_capture_groups_macro_subtree_expansion.yaml",
                    "binary": "tests/binary/lenovo2.bin",
                    "expected": true
                }
            },
            "param": "oren_rule_att_with_capture_groups_macro_subtree_expansion",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.10948893599925213,
                "max": 0.1249227249991236,
                "mean": 0.11544085933322397,
                "stddev": 0.0053421147409673745,
                "rounds": 9,
                "median": 0.11370004399941536,
                "iqr": 0.006547966249854653,
                "q1": 0.11183116675010751,
                "q3": 0.11837913299996217,
                "iqr_outliers": 0,
                "stddev_outliers": 3,
                "outliers": "3;0",
                "ld15iqr": 0.10948893599925213,
                "hd15iqr": 0.1249227249991236,
                "ops": 8.662444179434475,
                "total": 1.0389677339990158,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[zero_reg_rule with -O3]",
            "fullname": "tests/test_matching.py::test_all_patterns[zero_reg_rule with -O3]",
            "params": {
                "config": {
                    "title": "zero_reg_rule with -O3",
                    "yaml": "tests/yamls/zero_reg.yaml",
                    "assembly": "tests/source_test_files/zero_reg/main_O3.s",
                    "expected": true
                }
            },
            "param": "zero_reg_rule with -O3",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.0012301330007176148,
                "max": 0.0023566079999000067,
                "mean": 0.0013234769688763965,
                "stddev": 0.0001313028869687334,
                "rounds": 450,
                "median": 0.0012865650005551288,
                "iqr": 5.035899994254578e-05,
                "q1": 0.0012679179999395274,
                "q3": 0.0013182769998820731,
                "iqr_outliers": 58,
                "stddev_outliers": 32,
                "outliers": "32;58",
                "ld15iqr": 0.0012301330007176148,
                "hd15iqr": 0.001394180999341188,
                "ops": 755.585494509193,
                "total": 0.5955646359943785,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[zero_reg_rule with -O0]",
            "fullname": "tests/test_matching.py::test_all_patterns[zero_reg_rule with -O0]",
            "params": {
                "config": {
                    "title": "zero_reg_rule with -O0",
                    "yaml": "tests/yamls/zero_reg.yaml",
                    "assembly": "tests/source_test_files/zero_reg/main_O0.s",
                    "expected": true
                }
            },
            "param": "zero_reg_rule with -O0",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.001246690000698436,
                "max": 0.0028306549993430963,
                "mean": 0.0013401269701867557,
                "stddev": 0.00017331582943127337,
                "rounds": 773,
                "median": 0.0012945929993293248,
                "iqr": 5.63689991395222e-05,
                "q1": 0.0012676327510234842,
                "q3": 0.0013240017501630064,
                "iqr_outliers": 86,
                "stddev_outliers": 50,
                "outliers": "50;86",
                "ld15iqr": 0.001246690000698436,
                "hd15iqr": 0.0014104370002314681,
                "ops": 746.1979515721881,
                "total": 1.0359181479543622,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[function return 0 with zero_reg -O0]",
            "fullname": "tests/test_matching.py::test_all_patterns[function return 0 with zero_reg -O0]",
            "params": {
                "config": {
                    "title": "function return 0 with zero_reg -O0",
                    "yaml": "tests/yamls/function_return_0.yaml",
                    "assembly": "tests/source_test_files/zero_reg/main_O0.s",
                    "expected": true
                }
            },
            "param": "function return 0 with zero_reg -O0",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.0015471990009245928,
                "max": 0.0034264910009369487,
                "mean": 0.0016095189402587653,
                "stddev": 0.00014048865456932734,
                "rounds": 368,
                "median": 0.001575665500240575,
                "iqr": 4.588200044963742e-05,
                "q1": 0.001563126500514045,
                "q3": 0.0016090085009636823,
                "iqr_outliers": 33,
                "stddev_outliers": 15,
                "outliers": "15;33",
                "ld15iqr": 0.0015471990009245928,
                "hd15iqr": 0.0016788489992904942,
                "ops": 621.3036547673233,
                "total": 0.5923029700152256,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[function return 0 with zero_reg -O3]",
            "fullname": "tests/test_matching.py::test_all_patterns[function return 0 with zero_reg -O3]",
            "params": {
                "config": {
                    "title": "function return 0 with zero_reg -O3",
                    "yaml": "tests/yamls/function_return_0.yaml",
                    "assembly": "tests/source_test_files/zero_reg/main_O3.s",
                    "expected": true
                }
            },
            "param": "function return 0 with zero_reg -O3",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.0014885380005580373,
                "max": 0.0034031830000458285,
                "mean": 0.0016260553687247588,
                "stddev": 0.00022784714139875343,
                "rounds": 518,
                "median": 0.0015615825004715589,
                "iqr": 5.6092001614160836e-05,
                "q1": 0.0015456609999091597,
                "q3": 0.0016017530015233206,
                "iqr_outliers": 59,
                "stddev_outliers": 31,
                "outliers": "31;59",
                "ld15iqr": 0.0014885380005580373,
                "hd15iqr": 0.0016862379998201504,
                "ops": 614.9852085198394,
                "total": 0.842296680999425,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[Salsa20 asm]",
            "fullname": "tests/test_matching.py::test_all_patterns[Salsa20 asm]",
            "params": {
                "config": {
                    "title": "Salsa20 asm",
                    "yaml": "tests/yamls/arx.yaml",
                    "assembly": "tests/source_test_files/arx_detection/salsa20/salsa20.s",
                    "expected": true
                }
            },
            "param": "Salsa20 asm",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.0014537040005961899,
                "max": 0.0019621339997684117,
                "mean": 0.0015726722668963097,
                "stddev": 0.00018105097753641202,
                "rounds": 15,
                "median": 0.001470381999752135,
                "iqr": 0.00013739850010097143,
                "q1": 0.001460593749925465,
                "q3": 0.0015979922500264365,
                "iqr_outliers": 3,
                "stddev_outliers": 3,
                "outliers": "3;3",
                "ld15iqr": 0.0014537040005961899,
                "hd15iqr": 0.001867660999778309,
                "ops": 635.8603893826612,
                "total": 0.023590084003444645,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[Salsa20 bin]",
            "fullname": "tests/test_matching.py::test_all_patterns[Salsa20 bin]",
            "params": {
                "config": {
                    "title": "Salsa20 bin",
                    "yaml": "tests/yamls/arx.yaml",
                    "binary": "tests/source_test_files/arx_detection/salsa20/salsa20.o",
                    "expected": true
                }
            },
            "param": "Salsa20 bin",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.006530040998768527,
                "max": 0.017728481001540786,
                "mean": 0.007105249742861425,
                "stddev": 0.001069748494570613,
                "rounds": 140,
                "median": 0.006863692000479205,
                "iqr": 0.0002612489997773082,
                "q1": 0.006750589000148466,
                "q3": 0.007011837999925774,
                "iqr_outliers": 16,
                "stddev_outliers": 10,
                "outliers": "10;16",
                "ld15iqr": 0.006530040998768527,
                "hd15iqr": 0.007445625000400469,
                "ops": 140.7410064656334,
                "total": 0.9947349640005996,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[Chacha20 asm]",
            "fullname": "tests/test_matching.py::test_all_patterns[Chacha20 asm]",
            "params": {
                "config": {
                    "title": "Chacha20 asm",
                    "yaml": "tests/yamls/arx.yaml",
                    "assembly": "tests/source_test_files/arx_detection/chacha20/chacha20.s",
                    "expected": true
                }
            },
            "param": "Chacha20 asm",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.017768787000022712,
                "max": 0.024027716999626136,
                "mean": 0.01897782718515373,
                "stddev": 0.0013077104465520253,
                "rounds": 54,
                "median": 0.01852199400036625,
                "iqr": 0.0008041220007726224,
                "q1": 0.018326839999645017,
                "q3": 0.01913096200041764,
                "iqr_outliers": 6,
                "stddev_outliers": 6,
                "outliers": "6;6",
                "ld15iqr": 0.017768787000022712,
                "hd15iqr": 0.020393307000631467,
                "ops": 52.69307124802441,
                "total": 1.0248026679983013,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[Chacha20 bin]",
            "fullname": "tests/test_matching.py::test_all_patterns[Chacha20 bin]",
            "params": {
                "config": {
                    "title": "Chacha20 bin",
                    "yaml": "tests/yamls/arx.yaml",
                    "binary": "tests/source_test_files/arx_detection/chacha20/chacha20.o",
                    "expected": true
                }
            },
            "param": "Chacha20 bin",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.02377150899883418,
                "max": 0.031841467000049306,
                "mean": 0.025464870783597125,
                "stddev": 0.001544088416983878,
                "rounds": 37,
                "median": 0.02509148899844149,
                "iqr": 0.001040165499489376,
                "q1": 0.024602247000075295,
                "q3": 0.02564241249956467,
                "iqr_outliers": 4,
                "stddev_outliers": 5,
                "outliers": "5;4",
                "ld15iqr": 0.02377150899883418,
                "hd15iqr": 0.027211919999899692,
                "ops": 39.26978497154352,
                "total": 0.9422002189930936,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[AesCore rule asm]",
            "fullname": "tests/test_matching.py::test_all_patterns[AesCore rule asm]",
            "params": {
                "config": {
                    "title": "AesCore rule asm",
                    "yaml": "tests/yamls/arx.yaml",
                    "assembly": "tests/assembly/AesCore.s",
                    "expected": true
                }
            },
            "param": "AesCore rule asm",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.08433722100016894,
                "max": 0.09189059500022267,
                "mean": 0.0878851656664968,
                "stddev": 0.002673874121202402,
                "rounds": 12,
                "median": 0.08756847749918961,
                "iqr": 0.005071381501693395,
                "q1": 0.08540746749895334,
                "q3": 0.09047884900064673,
                "iqr_outliers": 0,
                "stddev_outliers": 6,
                "outliers": "6;0",
                "ld15iqr": 0.08433722100016894,
                "hd15iqr": 0.09189059500022267,
                "ops": 11.378484553294932,
                "total": 1.0546219879979617,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[AesCore rule bin]",
            "fullname": "tests/test_matching.py::test_all_patterns[AesCore rule bin]",
            "params": {
                "config": {
                    "title": "AesCore rule bin",
                    "yaml": "tests/yamls/arx.yaml",
                    "binary": "tests/binary/AesCore.bin",
                    "expected": true
                }
            },
            "param": "AesCore rule bin",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 0.09002705300008529,
                "max": 0.09916000300108863,
                "mean": 0.0932507457275113,
                "stddev": 0.0027043891393485828,
                "rounds": 11,
                "median": 0.09279459000026691,
                "iqr": 0.0037643907503479568,
                "q1": 0.09131532725041325,
                "q3": 0.0950797180007612,
                "iqr_outliers": 0,
                "stddev_outliers": 3,
                "outliers": "3;0",
                "ld15iqr": 0.09002705300008529,
                "hd15iqr": 0.09916000300108863,
                "ops": 10.723774830949958,
                "total": 1.0257582030026242,
                "iterations": 1
            }
        },
        {
            "group": null,
            "name": "test_all_patterns[Arx onto zip]",
            "fullname": "tests/test_matching.py::test_all_patterns[Arx onto zip]",
            "params": {
                "config": {
                    "title": "Arx onto zip",
                    "yaml": "tests/yamls/arx.yaml",
                    "binary": "tests/binary/zip.bin",
                    "expected": true
                }
            },
            "param": "Arx onto zip",
            "extra_info": {},
            "options": {
                "disable_gc": false,
                "timer": "perf_counter",
                "min_rounds": 5,
                "max_time": 1.0,
                "min_time": 5e-06,
                "warmup": false
            },
            "stats": {
                "min": 1.611640986000566,
                "max": 1.6569695510006568,
                "mean": 1.6297006248001709,
                "stddev": 0.02399321036863226,
                "rounds": 5,
                "median": 1.612650240000221,
                "iqr": 0.04335450049893552,
                "q1": 1.6121149470004639,
                "q3": 1.6554694474993994,
                "iqr_outliers": 0,
                "stddev_outliers": 2,
                "outliers": "2;0",
                "ld15iqr": 1.611640986000566,
                "hd15iqr": 1.6569695510006568,
                "ops": 0.6136096315988203,
                "total": 8.148503124000854,
                "iterations": 1
            }
        }
    ],
    "datetime": "2024-02-25T19:01:56.575876",
    "version": "4.0.0"
}