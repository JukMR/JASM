name: CI

on:
  push:
    branches:
      - main
    tags:
      - "v*" # Trigger on version tags e.g., v1.0.0
  pull_request:
  release:
    types: [created]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          python -m pip install --upgrade pip
          pip install pytest pytest-xdist poetry pyyaml

      - name: Install dependencies with poetry
        run: |
          echo "Installing dependencies with poetry ..."
          poetry install

      - name: Install project
        run: |
          echo "Installing project..."
          pip install -e .
      - name: Run tests
        run: |
          echo "Running tests..."
          poetry run sh ./run_tests.sh

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          poetry install

      - name: Build package
        run: |
          echo "Building package..."
          poetry build

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Build Wheel
        run: |
          poetry build --format wheel
          # This generates wheel files in the dist/ directory

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Wheel to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/*.whl
          asset_name: ${{ github.ref_name }}.whl
          asset_content_type: application/zip
