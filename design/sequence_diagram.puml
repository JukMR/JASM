@startuml sequence_diagram

participant "Main" as Main
participant "Yaml2Regex" as Yaml2Regex
participant "Disassembler" as Disassembler
participant "Parser" as Parser
participant "InstructionObserver" as InstructionObserver
participant "Matcher" as Matcher

Main -> Yaml2Regex: load_file(file)
activate Yaml2Regex


Yaml2Regex --> Main: return produce_regex()
deactivate Yaml2Regex

alt binary provided
    Main -> Disassembler: disassemble(binary)
    activate Disassembler
    Disassembler --> Main: return assembly
    deactivate Disassembler
end

Main -> Parser: parse_assembly(assembly)
activate Parser

loop for each observer in observer_list
    Parser -> InstructionObserver: observe_instruction(inst)
    activate InstructionObserver
    InstructionObserver --> Parser: return observed_instruction
    deactivate InstructionObserver
end
Parser --> Main: return parsed_instructions_string
deactivate Parser

Main -> Matcher: match(parsed_instructions_string, regex)
activate Matcher
Matcher --> Main: return match_result
deactivate Matcher


@enduml
