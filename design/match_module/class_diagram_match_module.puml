@startuml class_diagram_match_module

skinparam linetype polyline
skinparam classFontName Helvetica
skinparam ClassFontSize 14
skinparam ArrowColor MidnightBlue
skinparam groupInheritance 2


skinparam class {

}

class Instruction {
    + addrs: str
    + mnemonic: str
    + operands: List[str]
    + stringify() -> str
}


interface IMatchedObserver {
    {abstract} + matched: bool
    {abstract} + stringified_instructions: str
    {abstract} + regex_matched(addr: str) -> None
    {abstract} + finalize() -> None
}

interface IConsumer {
    + __init__(matched_observer: IMatchedObserver) -> None
    {abstract} + consume_instruction(inst: Instruction) -> None
    {abstract} + finalize() -> None
}

class InstructionObserverConsumer {
    - matchedObserver: IMatchedObserver
    - observedInstructions: List[Instruction]
    + __init__(matchedObserver: IMatchedObserver) -> None
    + consume_instruction(inst: Instruction) -> None
    + observe_instruction(inst: Instruction) -> Optional[Instruction]
    + finalize() -> None
}

class CompleteConsumer {
    - matchedObserver: IMatchedObserver
    - instructions: List[Instruction]
    + __init__(matchedObserver: IMatchedObserver) -> None
    + consume_instruction(inst: Instruction) -> None
    + finalize() -> None
}

class StreamConsumer {
    - matchedObserver: IMatchedObserver
    - streamBuffer: StreamBuffer
    + __init__(matchedObserver: IMatchedObserver) -> None
    + consume_instruction(inst: Instruction) -> None
    + finalize() -> None
}

class MatchedObserver {
    - isMatched: bool
    - instructions: List[Instruction]
    + regex_matched(addr: str) -> None
    + finalize() -> None
    + matched: bool
    + stringified_instructions: str
}


' Match module

' Consumer
InstructionObserverConsumer -o IMatchedObserver
InstructionObserverConsumer <|-- CompleteConsumer
InstructionObserverConsumer <|-- StreamConsumer
IMatchedObserver <|-- MatchedObserver
IConsumer <|-- InstructionObserverConsumer

@enduml