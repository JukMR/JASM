test_matching:
  - title: "9_calls"
    yaml: "tests/yamls/9_calls.yaml"
    assembly: "tests/assembly/binary_data.s"
    expected: True

  - title: "10_calls"
    yaml: "tests/yamls/10_calls.yaml"
    assembly: "tests/assembly/binary_data.s"
    expected: False

  - title: "exclude_list"
    yaml: "tests/yamls/exclude_list.yaml"
    assembly: "tests/assembly/binary_data.s"
    expected: True

  - title: "not_call"
    yaml: "tests/yamls/not_call.yaml"
    assembly: "tests/assembly/binary_data.s"
    expected: True

  - title: "include_and_include_list"
    yaml: "tests/yamls/include_and_include_list.yaml"
    assembly: "tests/assembly/binary_data.s"
    expected: True

  - title: "include_and_include_list_with_macros"
    yaml: "tests/yamls/include_and_include_list_with_macros.yaml"
    assembly: "tests/assembly/binary_data.s"
    expected: True

  - title: "include_and_include_list_with_macros_with_args"
    yaml: "tests/yamls/include_and_include_list_with_macros_with_args_mock_hint.yaml"
    assembly: "tests/assembly/binary_data.s"
    expected: True

  - title: "call_between_3_and_9"
    yaml: "tests/yamls/call_between_3_and_9.yaml"
    assembly: "tests/assembly/binary_data.s"
    expected: True

  - title: "moonbounce_malware_truncated_11518_lines"
    yaml: "tests/yamls/moonbounce_regex_matcher.yaml"
    assembly: "tests/assembly/moonbounce_malware_truncated_11518_lines.s"
    expected: True

  - title: "moonbounce_malware_full_111826_lines_binarly.s"
    yaml: "tests/yamls/moonbounce_from_binarly.yaml"
    assembly: "tests/assembly/moonbounce_malware_full_111826_lines.s"
    expected: True

  - title: "Moonbounce binarly core.s"
    yaml: "tests/yamls/moonbounce_from_binarly.yaml"
    assembly: "tests/assembly/moonbounce_binarly_core.s"
    expected: True

  - title: "1_call"
    yaml: "tests/yamls/1_call.yaml"
    assembly: "tests/assembly/binary_data.s"
    expected: True

  - title: "@any macro"
    yaml: "tests/yamls/any_macro.yaml"
    assembly: "tests/assembly/binary_data.s"
    expected: True

  - title: "moonbounce_malware_short_6_lines"
    yaml: "tests/yamls/moonbounce_regex_matcher.yaml"
    assembly: "tests/assembly/moonbounce_malware_short_6_lines.s"
    expected: True

  - title: "smc_assembly"
    yaml: "tests/yamls/smc.yaml"
    assembly: "tests/assembly/smc.s"
    expected: True

  - title: "smc_binary"
    yaml: "tests/yamls/smc.yaml"
    binary: "tests/binary/smc.bin"
    expected: True

  - title: "smc_binary_eko"
    yaml: "tests/yamls/smc.yaml"
    binary: "tests/binary/smc_eko.bin"
    expected: True

  - title: "oren_rule_example"
    yaml: "tests/yamls/oren_rule_att.yaml"
    binary: "tests/binary/lenovo2.bin"
    expected: True

  - title: "oren_rule_example_addr_valid"
    yaml: "tests/yamls/oren_rule_att_addr_valid.yaml"
    binary: "tests/binary/lenovo2.bin"
    expected: True

  - title: "oren_rule_example_addr_valid_assembly"
    yaml: "tests/yamls/oren_rule_att_addr_valid.yaml"
    assembly: "tests/assembly/lenovo2_short.s"
    expected: True

  - title: "lenovo_qequ_objdump"
    yaml: "tests/yamls/oren_rule_att.yaml"
    assembly: "tests/assembly/objlenovo_qequ_objdump_2.34.s"
    expected: True

  - title: "capture_groups_test_rule on binary_data_for_capture_groups"
    yaml: "tests/yamls/capture_groups_test_rule.yaml"
    assembly: "tests/assembly/binary_data_for_capture_groups.s"
    expected: True

  - title: "1_call_plain_with_multiple_findings"
    yaml: "tests/yamls/1_call_plain.yaml"
    assembly: "tests/assembly/binary_data.s"
    return_mode: "list"
    matching_mode: "all"
    return_only_address: True
    expected: ["4014", "4021", "4027", "402d", "4033", "4039", "403f", "4045", "404b", "4051"]

  - title: "1_call_plain_with_single_finding"
    yaml: "tests/yamls/1_call_plain.yaml"
    assembly: "tests/assembly/binary_data.s"
    return_mode: "list"
    matching_mode: "single"
    return_only_address: True
    expected: ["4014"]

  - title: "capture_group_two_push_with_same_reg"
    yaml: "tests/yamls/capture_group_2_push_with_same_reg.yaml"
    assembly: "tests/assembly/binary_data_for_capture_groups.s"
    expected: True

  - title: "capture_group_test_with_operands_working"
    yaml: "tests/yamls/capture_groups_test_rule.yaml"
    assembly: "tests/assembly/binary_data_for_capture_groups.s"
    expected: True

  - title: "oren_rule_with_capture_groups"
    yaml: "tests/yamls/oren_rule_att_with_capture_groups.yaml"
    binary: "tests/binary/lenovo2.bin"
    expected: True

  - title: "oren_rule_att_with_capture_groups_macro_subtree_expansion"
    yaml: "tests/yamls/oren_rule_att_with_capture_groups_macro_subtree_expansion.yaml"
    binary: "tests/binary/lenovo2.bin"
    expected: True

  - title: "zero_reg_rule with -O3"
    yaml: "tests/yamls/zero_reg.yaml"
    assembly: "tests/source_test_files/zero_reg/main_O3.s"
    expected: True

  - title: "zero_reg_rule with -O0"
    yaml: "tests/yamls/zero_reg.yaml"
    assembly: "tests/source_test_files/zero_reg/main_O0.s"
    expected: True

  - title: "function return 0 with zero_reg -O0"
    yaml: "tests/yamls/function_return_0.yaml"
    assembly: "tests/source_test_files/zero_reg/main_O0.s"
    expected: True

  - title: "function return 0 with zero_reg -O3"
    yaml: "tests/yamls/function_return_0.yaml"
    assembly: "tests/source_test_files/zero_reg/main_O3.s"
    expected: True

  - title: "Salsa20 asm"
    yaml: "tests/yamls/arx.yaml"
    assembly: "tests/source_test_files/arx_detection/salsa20/salsa20.s"
    expected: True

  - title: "Salsa20 bin"
    yaml: "tests/yamls/arx.yaml"
    binary: "tests/source_test_files/arx_detection/salsa20/salsa20.o"
    expected: True

  - title: "Chacha20 asm"
    yaml: "tests/yamls/arx.yaml"
    assembly: "tests/source_test_files/arx_detection/chacha20/chacha20.s"
    expected: True

  - title: "Chacha20 bin"
    yaml: "tests/yamls/arx.yaml"
    binary: "tests/source_test_files/arx_detection/chacha20/chacha20.o"
    expected: True

  - title: "AesCore rule asm"
    yaml: "tests/yamls/arx.yaml"
    assembly: "tests/assembly/AesCore.s"
    expected: True

  - title: "AesCore rule bin"
    yaml: "tests/yamls/arx.yaml"
    binary: "tests/binary/AesCore.bin"
    expected: True

  - title: "Arx onto zip"
    yaml: "tests/yamls/arx.yaml"
    binary: "tests/binary/zip.bin"
    expected: True

  - title: "Jesse rule assembly matching only"
    yaml: "tests/yamls/jesse_rule.yaml"
    assembly: "tests/assembly/jesse_rule_matching.s"
    expected: True

  - title: "Jesse rule assembly"
    yaml: "tests/yamls/jesse_rule.yaml"
    assembly: "tests/assembly/jesse_rule_asm.s"
    expected: True

  - title: "Jesse rule assembly matching only variation 1"
    yaml: "tests/yamls/jesse_rule_variation_1_reg_with_%.yaml"
    assembly: "tests/assembly/jesse_rule_matching.s"
    expected: True

  - title: "Jesse rule assembly matching only variation 2"
    yaml: "tests/yamls/jesse_rule_variation_2_number_without_0x.yaml"
    assembly: "tests/assembly/jesse_rule_matching.s"
    expected: True

  - title: "Jesse rule assembly matching only variation 3"
    yaml: "tests/yamls/jesse_rule_variation_3_number_without_0x_and_as_int_instead_of_str.yaml"
    assembly: "tests/assembly/jesse_rule_matching.s"
    expected: True

  - title: "Jesse rule assembly register capture group"
    yaml: "tests/yamls/jesse_rule_with_register_capture_group.yaml"
    assembly: "tests/assembly/jesse_rule_matching.s"
    expected: True

test_parsing_lines:
  - title: "binary_data.s"
    assembly: "tests/assembly/binary_data.s"
    number_of_lines: 33

  - title: "moonbounce_malware_short_6_lines.s"
    assembly: "tests/assembly/moonbounce_malware_short_6_lines.s"
    number_of_lines: 7

  - title: "moonbounce_malware_truncated_11518_lines.s"
    assembly: "tests/assembly/moonbounce_malware_truncated_11518_lines.s"
    number_of_lines: 10957

  - title: "ls_asm.s"
    assembly: "tests/assembly/ls_asm.s"
    number_of_lines: 19184

  - title: "moonbounce_malware_full_111826_lines.s"
    assembly: "tests/assembly/moonbounce_malware_full_111826_lines.s"
    number_of_lines: 107999

  - title: "moonbounce_malware_small_parsing_test_13_lines.s"
    assembly: "tests/assembly/moonbounce_malware_small_parsing_test_13_lines.s"
    number_of_lines: 14

  - title: "moonbounce_malware_short_section_test_19_lines.s"
    assembly: "tests/assembly/moonbounce_malware_short_section_test_19_lines.s"
    number_of_lines: 18

  - title: "moonbounce_malware_bad_instruction_25_lines.s"
    assembly: "tests/assembly/moonbounce_malware_bad_instruction_25_lines.s"
    number_of_lines: 26

  - title: "moonbounce_malware_jo_pn_instruction_9_lines.s"
    assembly: "tests/assembly/moonbounce_malware_jo_pn_instruction_9_lines.s"
    number_of_lines: 10

test_capture_groups_references:
  - title: "capture_groups_test_rule on binary_data_for_capture_groups"
    yaml: "tests/yamls/capture_groups_test_rule.yaml"
    cc_deref: ['\1']

  - title: "capture_group_two_push_with_same_reg"
    yaml: "tests/yamls/capture_group_2_push_with_same_reg.yaml"
    cc_deref: ['\1']

  - title: "capture_group_test_with_operands_working"
    yaml: "tests/yamls/capture_groups_test_rule.yaml"
    cc_deref: ['\1', '\2', '\3']

  - title: "oren_rule_with_capture_groups"
    yaml: "tests/yamls/oren_rule_att_with_capture_groups.yaml"
    cc_deref: ['\1', '\2']

  - title: "oren_rule_att_with_capture_groups_macro_subtree_expansion"
    yaml: "tests/yamls/oren_rule_att_with_capture_groups_macro_subtree_expansion.yaml"
    cc_deref: ['\1', '\2']
